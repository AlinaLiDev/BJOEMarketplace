/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC721, ERC721Interface } from "../ERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001bb338038062001bb38339810160408190526200003491620001b9565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000273565b828054620000769062000220565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c6200025d565b6040516020601f8401601f19168201810183811183821017156200016457620001646200025d565b60405283825285840181018710156200017b578485fd5b8492505b838310156200019e57858301810151828401820152918201916200017f565b83831115620001af57848185840101525b5095945050505050565b60008060408385031215620001cc578182fd5b82516001600160401b0380821115620001e3578384fd5b620001f1868387016200010e565b9350602085015191508082111562000207578283fd5b5062000216858286016200010e565b9150509250929050565b6002810460018216806200023557607f821691505b602082108114156200025757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61193080620002836000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b8578063b88d4fde146101cb578063c87b56dd146101de578063e985e9c5146101f1576100df565b80636352211e1461017d57806370a082311461019057806395d89b41146101b0576100df565b8063095ea7b3116100bd578063095ea7b31461014257806323b872dd1461015757806342842e0e1461016a576100df565b806301ffc9a7146100e457806306fdde031461010d578063081812fc14610122575b600080fd5b6100f76100f236600461119c565b610204565b60405161010491906112cf565b60405180910390f35b6101156102ae565b60405161010491906112da565b6101356101303660046111d4565b610340565b6040516101049190611265565b610155610150366004611173565b6103b3565b005b610155610165366004611014565b6104b3565b610155610178366004611014565b610505565b61013561018b3660046111d4565b610520565b6101a361019e366004610fc8565b61057c565b6040516101049190611723565b6101156105f4565b6101556101c6366004611139565b610603565b6101556101d936600461104f565b61073d565b6101156101ec3660046111d4565b610796565b6100f76101ff366004610fe2565b610833565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000148061029757507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806102a657506102a68261086e565b90505b919050565b6060600080546102bd9061179b565b80601f01602080910402602001604051908101604052809291908181526020018280546102e99061179b565b80156103365780601f1061030b57610100808354040283529160200191610336565b820191906000526020600020905b81548152906001019060200180831161031957829003601f168201915b5050505050905090565b600061034b826108b8565b61038a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038190611552565b60405180910390fd5b5060009081526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60006103be82610520565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610426576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038190611669565b8073ffffffffffffffffffffffffffffffffffffffff166104456108e2565b73ffffffffffffffffffffffffffffffffffffffff16148061046e575061046e816101ff6108e2565b6104a4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103819061143b565b6104ae83836108e6565b505050565b6104c46104be6108e2565b82610986565b6104fa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610381906116c6565b6104ae838383610a59565b6104ae8383836040518060200160405280600081525061073d565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff16806102a6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610381906114f5565b600073ffffffffffffffffffffffffffffffffffffffff82166105cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038190611498565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b6060600180546102bd9061179b565b61060b6108e2565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610670576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610381906113a7565b806005600061067d6108e2565b73ffffffffffffffffffffffffffffffffffffffff90811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016921515929092179091556106ec6108e2565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161073191906112cf565b60405180910390a35050565b61074e6107486108e2565b83610986565b610784576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610381906116c6565b61079084848484610c20565b50505050565b60606107a1826108b8565b6107d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103819061160c565b60006107e1610c6d565b90506000815111610801576040518060200160405280600081525061082c565b8061080b84610c7f565b60405160200161081c929190611236565b6040516020818303038152906040525b9392505050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205460ff1690565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b60009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16151590565b3390565b600081815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8416908117909155819061094082610520565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610991826108b8565b6109c7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610381906113de565b60006109d283610520565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610a4157508373ffffffffffffffffffffffffffffffffffffffff16610a2984610340565b73ffffffffffffffffffffffffffffffffffffffff16145b80610a515750610a518185610833565b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16610a7982610520565b73ffffffffffffffffffffffffffffffffffffffff1614610ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610381906115af565b73ffffffffffffffffffffffffffffffffffffffff8216610b13576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103819061134a565b610b1e8383836104ae565b610b296000826108e6565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120805460019290610b5f908490611758565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260408120805460019290610b9a90849061172c565b909155505060008181526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610c2b848484610a59565b610c3784848484610e00565b610790576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610381906112ed565b60408051602081019091526000815290565b606081610cc0575060408051808201909152600181527f300000000000000000000000000000000000000000000000000000000000000060208201526102a9565b8160005b8115610cea5780610cd4816117ef565b9150610ce39050600a83611744565b9150610cc4565b60008167ffffffffffffffff811115610d2c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610d56576020820181803683370190505b5090505b8415610a5157610d6b600183611758565b9150610d78600a86611828565b610d8390603061172c565b60f81b818381518110610dbf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610df9600a86611744565b9450610d5a565b6000610e218473ffffffffffffffffffffffffffffffffffffffff16610f9e565b15610f93578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610e4a6108e2565b8786866040518563ffffffff1660e01b8152600401610e6c9493929190611286565b602060405180830381600087803b158015610e8657600080fd5b505af1925050508015610ed4575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610ed1918101906111b8565b60015b610f48573d808015610f02576040519150601f19603f3d011682016040523d82523d6000602084013e610f07565b606091505b508051610f40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610381906112ed565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050610a51565b506001949350505050565b3b151590565b803573ffffffffffffffffffffffffffffffffffffffff811681146102a957600080fd5b600060208284031215610fd9578081fd5b61082c82610fa4565b60008060408385031215610ff4578081fd5b610ffd83610fa4565b915061100b60208401610fa4565b90509250929050565b600080600060608486031215611028578081fd5b61103184610fa4565b925061103f60208501610fa4565b9150604084013590509250925092565b60008060008060808587031215611064578081fd5b61106d85610fa4565b9350602061107c818701610fa4565b935060408601359250606086013567ffffffffffffffff8082111561109f578384fd5b818801915088601f8301126110b2578384fd5b8135818111156110c4576110c461189a565b604051847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011682010181811084821117156111055761110561189a565b60405281815283820185018b101561111b578586fd5b81858501868301379081019093019390935250939692955090935050565b6000806040838503121561114b578182fd5b61115483610fa4565b915060208301358015158114611168578182fd5b809150509250929050565b60008060408385031215611185578182fd5b61118e83610fa4565b946020939093013593505050565b6000602082840312156111ad578081fd5b813561082c816118c9565b6000602082840312156111c9578081fd5b815161082c816118c9565b6000602082840312156111e5578081fd5b5035919050565b6000815180845261120481602086016020860161176f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000835161124881846020880161176f565b83519083019061125c81836020880161176f565b01949350505050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526112c560808301846111ec565b9695505050505050565b901515815260200190565b60006020825261082c60208301846111ec565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527f63656976657220696d706c656d656e7465720000000000000000000000000000606082015260800190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460408201527f7265737300000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606082015260800190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560408201527f726f206164647265737300000000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201527f656e7420746f6b656e0000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201527f73206e6f74206f776e0000000000000000000000000000000000000000000000606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560408201527f7200000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60408201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606082015260800190565b90815260200190565b6000821982111561173f5761173f61183c565b500190565b6000826117535761175361186b565b500490565b60008282101561176a5761176a61183c565b500390565b60005b8381101561178a578181015183820152602001611772565b838111156107905750506000910152565b6002810460018216806117af57607f821691505b602082108114156117e9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156118215761182161183c565b5060010190565b6000826118375761183761186b565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffff00000000000000000000000000000000000000000000000000000000811681146118f757600080fd5b5056fea26469706673582212205061a04a88ddd1afff1883a7ecd4cc2d5ccefb355d8273b3a8f2b715ff28d6a564736f6c63430008000033";

export class ERC721__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new utils.Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}
